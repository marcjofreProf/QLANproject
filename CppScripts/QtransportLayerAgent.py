# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_QtransportLayerAgent')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_QtransportLayerAgent')
    _QtransportLayerAgent = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_QtransportLayerAgent', [dirname(__file__)])
        except ImportError:
            import _QtransportLayerAgent
            return _QtransportLayerAgent
        try:
            _mod = imp.load_module('_QtransportLayerAgent', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _QtransportLayerAgent = swig_import_helper()
    del swig_import_helper
else:
    import _QtransportLayerAgent
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

NumBytesBufferICPMAX = _QtransportLayerAgent.NumBytesBufferICPMAX
IPcharArrayLengthMAX = _QtransportLayerAgent.IPcharArrayLengthMAX
NumConnectedHosts = _QtransportLayerAgent.NumConnectedHosts
NumCalcCenterMass = _QtransportLayerAgent.NumCalcCenterMass
NumRunsPerCenterMass = _QtransportLayerAgent.NumRunsPerCenterMass
class QTLAH(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, QTLAH, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, QTLAH, name)
    __repr__ = _swig_repr
    APPLICATION_RUNNING = _QtransportLayerAgent.QTLAH_APPLICATION_RUNNING
    APPLICATION_PAUSED = _QtransportLayerAgent.QTLAH_APPLICATION_PAUSED
    APPLICATION_EXIT = _QtransportLayerAgent.QTLAH_APPLICATION_EXIT
    __swig_setmethods__["numberSessions"] = _QtransportLayerAgent.QTLAH_numberSessions_set
    __swig_getmethods__["numberSessions"] = _QtransportLayerAgent.QTLAH_numberSessions_get
    if _newclass:
        numberSessions = _swig_property(_QtransportLayerAgent.QTLAH_numberSessions_get, _QtransportLayerAgent.QTLAH_numberSessions_set)

    def __init__(self, numberSessions, ParamsDescendingCharArray, ParamsAscendingCharArray):
        this = _QtransportLayerAgent.new_QTLAH(numberSessions, ParamsDescendingCharArray, ParamsAscendingCharArray)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def SendKeepAliveHeartBeatsSockets(self):
        return _QtransportLayerAgent.QTLAH_SendKeepAliveHeartBeatsSockets(self)

    def getState(self):
        return _QtransportLayerAgent.QTLAH_getState(self)

    def m_start(self):
        return _QtransportLayerAgent.QTLAH_m_start(self)

    def m_pause(self):
        return _QtransportLayerAgent.QTLAH_m_pause(self)

    def m_resume(self):
        return _QtransportLayerAgent.QTLAH_m_resume(self)

    def m_exit(self):
        return _QtransportLayerAgent.QTLAH_m_exit(self)

    def InitAgentProcess(self):
        return _QtransportLayerAgent.QTLAH_InitAgentProcess(self)

    def SendMessageAgent(self, ParamsDescendingCharArray):
        return _QtransportLayerAgent.QTLAH_SendMessageAgent(self, ParamsDescendingCharArray)

    def SimulateRetrieveNumStoredQubitsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsIntArray, ParamsDoubleArray):
        return _QtransportLayerAgent.QTLAH_SimulateRetrieveNumStoredQubitsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsIntArray, ParamsDoubleArray)

    def SimulateRetrieveSynchParamsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsDoubleArray):
        return _QtransportLayerAgent.QTLAH_SimulateRetrieveSynchParamsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsDoubleArray)

    def WaitUntilActiveActionFreePreLock(self, ParamsCharArray, nChararray):
        return _QtransportLayerAgent.QTLAH_WaitUntilActiveActionFreePreLock(self, ParamsCharArray, nChararray)

    def UnBlockActiveActionFreePreLock(self, ParamsCharArray, nChararray):
        return _QtransportLayerAgent.QTLAH_UnBlockActiveActionFreePreLock(self, ParamsCharArray, nChararray)
    __swig_destroy__ = _QtransportLayerAgent.delete_QTLAH
    __del__ = lambda self: None
QTLAH_swigregister = _QtransportLayerAgent.QTLAH_swigregister
QTLAH_swigregister(QTLAH)

# This file is compatible with both classic and new-style classes.


