# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _QtransportLayerAgent
else:
    import _QtransportLayerAgent

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


NumBytesBufferICPMAX = _QtransportLayerAgent.NumBytesBufferICPMAX
IPcharArrayLengthMAX = _QtransportLayerAgent.IPcharArrayLengthMAX
NumConnectedHosts = _QtransportLayerAgent.NumConnectedHosts
NumCalcCenterMass = _QtransportLayerAgent.NumCalcCenterMass
NumRunsPerCenterMass = _QtransportLayerAgent.NumRunsPerCenterMass
class QTLAH(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    APPLICATION_RUNNING = _QtransportLayerAgent.QTLAH_APPLICATION_RUNNING
    APPLICATION_PAUSED = _QtransportLayerAgent.QTLAH_APPLICATION_PAUSED
    APPLICATION_EXIT = _QtransportLayerAgent.QTLAH_APPLICATION_EXIT
    numberSessions = property(_QtransportLayerAgent.QTLAH_numberSessions_get, _QtransportLayerAgent.QTLAH_numberSessions_set)

    def __init__(self, numberSessions, ParamsDescendingCharArray, ParamsAscendingCharArray):
        _QtransportLayerAgent.QTLAH_swiginit(self, _QtransportLayerAgent.new_QTLAH(numberSessions, ParamsDescendingCharArray, ParamsAscendingCharArray))

    def SendKeepAliveHeartBeatsSockets(self):
        return _QtransportLayerAgent.QTLAH_SendKeepAliveHeartBeatsSockets(self)

    def getState(self):
        return _QtransportLayerAgent.QTLAH_getState(self)

    def m_start(self):
        return _QtransportLayerAgent.QTLAH_m_start(self)

    def m_pause(self):
        return _QtransportLayerAgent.QTLAH_m_pause(self)

    def m_resume(self):
        return _QtransportLayerAgent.QTLAH_m_resume(self)

    def m_exit(self):
        return _QtransportLayerAgent.QTLAH_m_exit(self)

    def InitAgentProcess(self):
        return _QtransportLayerAgent.QTLAH_InitAgentProcess(self)

    def SendMessageAgent(self, ParamsDescendingCharArray):
        return _QtransportLayerAgent.QTLAH_SendMessageAgent(self, ParamsDescendingCharArray)

    def SimulateRetrieveNumStoredQubitsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsIntArray, ParamsDoubleArray):
        return _QtransportLayerAgent.QTLAH_SimulateRetrieveNumStoredQubitsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsIntArray, ParamsDoubleArray)

    def SimulateRetrieveSynchParamsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsDoubleArray):
        return _QtransportLayerAgent.QTLAH_SimulateRetrieveSynchParamsNode(self, IPhostReplyOpNet, IPhostRequestOpNet, ParamsDoubleArray)

    def WaitUntilActiveActionFreePreLock(self, ParamsCharArray, nChararray):
        return _QtransportLayerAgent.QTLAH_WaitUntilActiveActionFreePreLock(self, ParamsCharArray, nChararray)

    def UnBlockActiveActionFreePreLock(self, ParamsCharArray, nChararray):
        return _QtransportLayerAgent.QTLAH_UnBlockActiveActionFreePreLock(self, ParamsCharArray, nChararray)
    __swig_destroy__ = _QtransportLayerAgent.delete_QTLAH

# Register QTLAH in _QtransportLayerAgent:
_QtransportLayerAgent.QTLAH_swigregister(QTLAH)

